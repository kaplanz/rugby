//! Parser for `Debugger` commands.

WHITESPACE      = _{ " " | "\t" }
EOL             = _{ ";" | NEWLINE }

Identifier      = @{ (ASCII_ALPHA | "_") ~ (ASCII_ALPHA | ASCII_DIGIT | "_")+ }
String          =  { "\"" ~ Inner ~ "\"" }
  Inner         = @{ Char* }
    Char        = _{ !("\"" | NEWLINE) ~ ANY }
Int             = @{ Sign? ~ Num }
  Sign          = ${ ("+" | "-") }
SInt            = @{ Sign ~ Num }
UInt            = @{ Num }
  Num           = @{ Bin | Oct | Hex | Dec }
    Bin         = ${ BinRadix ~ BinValue }
      BinRadix  = ${ ^"0b" | "%" }
      BinValue  = ${ ASCII_BIN_DIGIT+ }
    Oct         = ${ OctRadix ~ OctValue }
      OctRadix  = ${ ^"0o" | "@" }
      OctValue  = ${ ASCII_OCT_DIGIT+ }
    Dec         = ${ DecRadix ~ DecValue }
      DecRadix  = ${ "" }
      DecValue  = ${ ASCII_DIGIT+ }
    Hex         = ${ HexRadix ~ HexValue }
      HexRadix  = ${ ^"0x" | "$" }
      HexValue  = ${ ASCII_HEX_DIGIT+ }
RangeBounds     =  { RangeInc | Range | RangeFrom | RangeToInc | RangeTo |
                     RangeFull }
  Range         = ${ UInt ~ ".."  ~ (UInt | SInt) }
  RangeFrom     = ${ UInt ~ ".."                  }
  RangeFull     = ${        ".."                  }
  RangeInc      = ${ UInt ~ "..=" ~ (UInt | SInt) }
  RangeTo       = ${        ".."  ~ (UInt | SInt) }
  RangeToInc    = ${        "..=" ~ (UInt | SInt) }

Path            =  { Char* }

Filter          = @{ Directive ~ ("," ~ Filter)? }
  Directive     = @{ (Module ~ "=" ~ Level) | Module | Level }
    Module      = @{ Identifier ~ ("::" ~ Module)? }
    Level       = @{ LTrace | LDebug | LInfo | LWarn | LError | LOff }
      LTrace    = _{ ^"trace" }
      LDebug    = _{ ^"debug" }
      LInfo     = _{ ^"info" }
      LWarn     = _{ ^"warn" }
      LError    = _{ ^"error" }
      LOff      = _{ ^"off" }

Program         = _{ SOI ~ Command? ~ (EOL ~ Command?)* ~ EOI }
  Keyword       = _{ KBreak | KCapture | KContinue | KDelete | KDisable |
                     KEnable | KFreq | KGoto | KHelp | KIgnore | KInfo | KJump |
                     KLoad | KLog | KList | KQuit | KReset | KRead | KSerial |
                     KStore | KStep | KWrite }
    KBreak      =  { ^"break"     | ^"br"   | ^"b" }
    KCapture    =  { ^"capture"   | ^"ps"          }
    KContinue   =  { ^"continue"  | ^"cont" | ^"c" }
    KDelete     =  { ^"delete"    | ^"del"         }
    KDisable    =  { ^"disable"   | ^"dis"  | ^"d" }
    KEnable     =  { ^"enable"    | ^"en"   | ^"e" }
    KFreq       =  { ^"frequency" | ^"freq" | ^"f" }
    KGoto       =  { ^"goto"      | ^"go"   | ^"g" }
    KHelp       =  { ^"help"                | ^"h" }
    KIgnore     =  { ^"ignore"    | ^"ig"          }
    KInfo       =  { ^"info"                | ^"i" }
    KJump       =  { ^"jump"      | ^"jp"   | ^"j" }
    KList       =  { ^"list"      | ^"ls"   | ^"l" }
    KLoad       =  { ^"load"      | ^"ld"          }
      KLoadB    =  { ^"lb" }
      KLoadW    =  { ^"lw" }
    KLog        =  { ^"log"       | ^"lo"          }
    KQuit       =  { ^"quit"                | ^"q" }
    KRead       =  { ^"read"      | ^"rd"   | ^"r" }
    KReset      =  { ^"reset"     | ^"res"         }
    KSerial     =  { ^"serial"    | ^"sx"          }
    KStep       =  { ^"step"                | ^"s" }
    KStore      =  { ^"store"     | ^"sr"          }
      KStoreB   =  { ^"sb" }
      KStoreW   =  { ^"sw" }
    KWrite      =  { ^"write"     | ^"wr"   | ^"w" }
  Location      = _{ WLocation | BLocation }
    BLocation   = _{ Apu | Pic | Ppu | SerialX | Timer | Byte }
      Apu       =  { Ch1 | Ch2 | Ch3 | Ch4 | Nr50 | Nr51 | Nr52 }
        Ch1     = _{ Nr10 | Nr11 | Nr12 | Nr13 | Nr14 }
          Nr10  =  { ^"nr10" }
          Nr11  =  { ^"nr11" }
          Nr12  =  { ^"nr12" }
          Nr13  =  { ^"nr13" }
          Nr14  =  { ^"nr14" }
          Nr21  =  { ^"nr21" }
          Nr22  =  { ^"nr22" }
          Nr23  =  { ^"nr23" }
          Nr24  =  { ^"nr24" }
          Nr30  =  { ^"nr30" }
          Nr31  =  { ^"nr31" }
          Nr32  =  { ^"nr32" }
          Nr33  =  { ^"nr33" }
          Nr34  =  { ^"nr34" }
          Nr41  =  { ^"nr41" }
          Nr42  =  { ^"nr42" }
          Nr43  =  { ^"nr43" }
          Nr44  =  { ^"nr44" }
          Nr50  =  { ^"nr50" }
          Nr51  =  { ^"nr51" }
          Nr52  =  { ^"nr52" }
        Ch2     = _{        Nr21 | Nr22 | Nr23 | Nr24 }
        Ch3     = _{ Nr30 | Nr31 | Nr32 | Nr33 | Nr34 }
        Ch4     = _{        Nr41 | Nr42 | Nr43 | Nr44 }
      Byte      =  { A | F | B | C | D | E | H | L }
        A       =  { ^"a" }
        F       =  { ^"f" }
        B       =  { ^"b" }
        C       =  { ^"c" }
        D       =  { ^"d" }
        E       =  { ^"e" }
        H       =  { ^"h" }
        L       =  { ^"l" }
      Pic       =  { If | Ie }
        If      =  { ^"if" }
        Ie      =  { ^"ie" }
      Ppu       =  { Lcdc | Stat | Scy | Scx | Lyc | Ly | Dma | Bgp | Obp0 |
                     Obp1 | Wy | Wx }
        Lcdc    =  { ^"lcdc" }
        Stat    =  { ^"stat" }
        Scy     =  { ^"scy" }
        Scx     =  { ^"scx" }
        Ly      =  { ^"ly" }
        Lyc     =  { ^"lyc" }
        Dma     =  { ^"dma" }
        Bgp     =  { ^"bgp" }
        Obp0    =  { ^"obp0" }
        Obp1    =  { ^"obp1" }
        Wy      =  { ^"wy" }
        Wx      =  { ^"wx" }
      SerialX   =  { Sb | Sc }
        Sb      =  { ^"sb" }
        Sc      =  { ^"sc" }
      Timer     =  { Div | Tima | Tma | Tac }
        Div     =  { ^"div" }
        Tima    =  { ^"tima" }
        Tma     =  { ^"tma" }
        Tac     =  { ^"tac" }
    WLocation   = _{ Word }
      Word      =  { AF | BC | DE | HL | SP | PC }
        AF      =  { ^"af" }
        BC      =  { ^"bc" }
        DE      =  { ^"de" }
        HL      =  { ^"hl" }
        SP      =  { ^"sp" }
        PC      =  { ^"pc" }
  Command       = _{ Break | Capture | Continue | Delete | Disable | Enable |
                     Freq | Goto | Help | Ignore | Info | Jump | Load | Log |
                     List | Quit | Reset | Read | Serial | Store | Step |
                     Write }
    Break       =  { KBreak ~ UInt }
    Capture     =  { KCapture ~ Force? ~ Path }
      Force     =  { "!" }
    Continue    =  { KContinue }
    Delete      =  { KDelete ~ UInt }
    Disable     =  { KDisable ~ UInt }
    Enable      =  { KEnable ~ UInt }
    Freq        =  { KFreq ~ SFreq? }
      SFreq     = _{ Dot | Mach | Insn | Line | Frame }
        Dot     =  { ^"dot"                     | ^"d" }
        Mach    =  { ^"machine"       | ^"mach" | ^"m" }
        Insn    =  { ^"instruction"   | ^"insn" | ^"i" }
        Line    =  { ^"scanline"      | ^"line" | ^"l" }
        Frame   =  { ^"frame"                   | ^"f" }
    Goto        =  { KGoto ~ UInt }
    Help        =  { KHelp ~ Keyword? }
    Ignore      =  { KIgnore ~ UInt ~ UInt }
    Info        =  { KInfo ~ SInfo? }
      SInfo     = _{ KBreak }
    Jump        =  { KJump ~ UInt }
    List        =  { KList }
    Load        =  { LoadB | LoadW | (KLoad ~ Location+) }
      LoadB     = _{ KLoadB ~ BLocation+ }
      LoadW     = _{ KLoadW ~ WLocation+ }
    Log         =  { KLog ~ Filter? }
    Quit        =  { KQuit }
    Read        =  { KRead ~ (RangeBounds | UInt) }
    Reset       =  { KReset }
    Serial      =  { KSerial ~ (Send | Recv | Peek) }
      Peek      =  { "" }
      Recv      =  { "!" }
      Send      =  { Bytes | String }
         Bytes  =  { "[" ~ (UInt ~ ("," ~ UInt)*)? ~ "]" }
    Step        =  { KStep ~ UInt? }
    Store       =  { StoreB | StoreW | (KStore ~ Location+ ~ Int) }
      StoreB    = _{ KStoreB ~ BLocation+ ~ Int }
      StoreW    = _{ KStoreW ~ WLocation+ ~ Int }
    Write       =  { KWrite ~ (RangeBounds | UInt) ~ Int }
