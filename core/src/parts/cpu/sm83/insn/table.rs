use super::{exec, Instruction};

/// Instruction lookup table.
#[rustfmt::skip]
pub const DECODE: [Instruction; 0x100] = [
    Instruction { code: 0x00, oper: exec::nop::default(),    repr: "NOP",            },
    Instruction { code: 0x01, oper: exec::ldw::default(),    repr: "LD BC, n16",     },
    Instruction { code: 0x02, oper: exec::ld::default(),     repr: "LD (BC), A",     },
    Instruction { code: 0x03, oper: exec::incw::default(),   repr: "INC BC",         },
    Instruction { code: 0x04, oper: exec::inc::default(),    repr: "INC B",          },
    Instruction { code: 0x05, oper: exec::dec::default(),    repr: "DEC B",          },
    Instruction { code: 0x06, oper: exec::ld::default(),     repr: "LD B, n8",       },
    Instruction { code: 0x07, oper: exec::rlca::default(),   repr: "RLCA",           },
    Instruction { code: 0x08, oper: exec::ldw::default(),    repr: "LD (a16), SP",   },
    Instruction { code: 0x09, oper: exec::addw::default(),   repr: "ADD HL, BC",     },
    Instruction { code: 0x0a, oper: exec::ld::default(),     repr: "LD A, (BC)",     },
    Instruction { code: 0x0b, oper: exec::decw::default(),   repr: "DEC BC",         },
    Instruction { code: 0x0c, oper: exec::inc::default(),    repr: "INC C",          },
    Instruction { code: 0x0d, oper: exec::dec::default(),    repr: "DEC C",          },
    Instruction { code: 0x0e, oper: exec::ld::default(),     repr: "LD C, n8",       },
    Instruction { code: 0x0f, oper: exec::rrca::default(),   repr: "RRCA",           },
    Instruction { code: 0x10, oper: exec::stop::default(),   repr: "STOP",           },
    Instruction { code: 0x11, oper: exec::ldw::default(),    repr: "LD DE, (n16)",   },
    Instruction { code: 0x12, oper: exec::ld::default(),     repr: "LD (DE), A",     },
    Instruction { code: 0x13, oper: exec::incw::default(),   repr: "INC DE",         },
    Instruction { code: 0x14, oper: exec::inc::default(),    repr: "INC D",          },
    Instruction { code: 0x15, oper: exec::dec::default(),    repr: "DEC D",          },
    Instruction { code: 0x16, oper: exec::ld::default(),     repr: "LD D, n8",       },
    Instruction { code: 0x17, oper: exec::rla::default(),    repr: "RLA",            },
    Instruction { code: 0x18, oper: exec::jr::default(),     repr: "JR e8",          },
    Instruction { code: 0x19, oper: exec::addw::default(),   repr: "ADD HL, DE",     },
    Instruction { code: 0x1a, oper: exec::ld::default(),     repr: "LD A, (DE)",     },
    Instruction { code: 0x1b, oper: exec::decw::default(),   repr: "DEC DE",         },
    Instruction { code: 0x1c, oper: exec::inc::default(),    repr: "INC E",          },
    Instruction { code: 0x1d, oper: exec::dec::default(),    repr: "DEC E",          },
    Instruction { code: 0x1e, oper: exec::ld::default(),     repr: "LD E, n8",       },
    Instruction { code: 0x1f, oper: exec::rra::default(),    repr: "RRA",            },
    Instruction { code: 0x20, oper: exec::jr::default(),     repr: "JR NZ, e8",      },
    Instruction { code: 0x21, oper: exec::ldw::default(),    repr: "LD HL, n16",     },
    Instruction { code: 0x22, oper: exec::ld::default(),     repr: "LD (HL+), A",    },
    Instruction { code: 0x23, oper: exec::incw::default(),   repr: "INC HL",         },
    Instruction { code: 0x24, oper: exec::inc::default(),    repr: "INC H",          },
    Instruction { code: 0x25, oper: exec::dec::default(),    repr: "DEC H",          },
    Instruction { code: 0x26, oper: exec::ld::default(),     repr: "LD H, n8",       },
    Instruction { code: 0x27, oper: exec::daa::default(),    repr: "DAA",            },
    Instruction { code: 0x28, oper: exec::jr::default(),     repr: "JR Z, e8",       },
    Instruction { code: 0x29, oper: exec::addw::default(),   repr: "ADD HL, HL",     },
    Instruction { code: 0x2a, oper: exec::ld::default(),     repr: "LD A, (HL+)",    },
    Instruction { code: 0x2b, oper: exec::decw::default(),   repr: "DEC HL",         },
    Instruction { code: 0x2c, oper: exec::inc::default(),    repr: "INC L",          },
    Instruction { code: 0x2d, oper: exec::dec::default(),    repr: "DEC L",          },
    Instruction { code: 0x2e, oper: exec::ld::default(),     repr: "LD L, n8",       },
    Instruction { code: 0x2f, oper: exec::cpl::default(),    repr: "CPL",            },
    Instruction { code: 0x30, oper: exec::jr::default(),     repr: "JR NC, e8",      },
    Instruction { code: 0x31, oper: exec::ldw::default(),    repr: "LD SP, n16",     },
    Instruction { code: 0x32, oper: exec::ld::default(),     repr: "LD (HL-), A",    },
    Instruction { code: 0x33, oper: exec::incw::default(),   repr: "INC SP",         },
    Instruction { code: 0x34, oper: exec::inc::default(),    repr: "INC (HL)",       },
    Instruction { code: 0x35, oper: exec::dec::default(),    repr: "DEC (HL)",       },
    Instruction { code: 0x36, oper: exec::ld::default(),     repr: "LD (HL), n8",    },
    Instruction { code: 0x37, oper: exec::scf::default(),    repr: "SCF",            },
    Instruction { code: 0x38, oper: exec::jr::default(),     repr: "JR C, e8",       },
    Instruction { code: 0x39, oper: exec::addw::default(),   repr: "ADD HL, SP",     },
    Instruction { code: 0x3a, oper: exec::ld::default(),     repr: "LD A, (HL-)",    },
    Instruction { code: 0x3b, oper: exec::decw::default(),   repr: "DEC SP",         },
    Instruction { code: 0x3c, oper: exec::inc::default(),    repr: "INC A",          },
    Instruction { code: 0x3d, oper: exec::dec::default(),    repr: "DEC A",          },
    Instruction { code: 0x3e, oper: exec::ld::default(),     repr: "LD A, n8",       },
    Instruction { code: 0x3f, oper: exec::ccf::default(),    repr: "CCP",            },
    Instruction { code: 0x40, oper: exec::ld::default(),     repr: "LD B, B",        },
    Instruction { code: 0x41, oper: exec::ld::default(),     repr: "LD B, C",        },
    Instruction { code: 0x42, oper: exec::ld::default(),     repr: "LD B, D",        },
    Instruction { code: 0x43, oper: exec::ld::default(),     repr: "LD B, E",        },
    Instruction { code: 0x44, oper: exec::ld::default(),     repr: "LD B, H",        },
    Instruction { code: 0x45, oper: exec::ld::default(),     repr: "LD B, L",        },
    Instruction { code: 0x46, oper: exec::ld::default(),     repr: "LD B, (HL)",     },
    Instruction { code: 0x47, oper: exec::ld::default(),     repr: "LD B, A",        },
    Instruction { code: 0x48, oper: exec::ld::default(),     repr: "LD C, B",        },
    Instruction { code: 0x49, oper: exec::ld::default(),     repr: "LD C, C",        },
    Instruction { code: 0x4a, oper: exec::ld::default(),     repr: "LD C, D",        },
    Instruction { code: 0x4b, oper: exec::ld::default(),     repr: "LD C, E",        },
    Instruction { code: 0x4c, oper: exec::ld::default(),     repr: "LD C, H",        },
    Instruction { code: 0x4d, oper: exec::ld::default(),     repr: "LD C, L",        },
    Instruction { code: 0x4e, oper: exec::ld::default(),     repr: "LD C, (HL)",     },
    Instruction { code: 0x4f, oper: exec::ld::default(),     repr: "LD C, A",        },
    Instruction { code: 0x50, oper: exec::ld::default(),     repr: "LD D, B",        },
    Instruction { code: 0x51, oper: exec::ld::default(),     repr: "LD D, C",        },
    Instruction { code: 0x52, oper: exec::ld::default(),     repr: "LD D, D",        },
    Instruction { code: 0x53, oper: exec::ld::default(),     repr: "LD D, E",        },
    Instruction { code: 0x54, oper: exec::ld::default(),     repr: "LD D, H",        },
    Instruction { code: 0x55, oper: exec::ld::default(),     repr: "LD D, L",        },
    Instruction { code: 0x56, oper: exec::ld::default(),     repr: "LD D, (HL)",     },
    Instruction { code: 0x57, oper: exec::ld::default(),     repr: "LD D, A",        },
    Instruction { code: 0x58, oper: exec::ld::default(),     repr: "LD E, B",        },
    Instruction { code: 0x59, oper: exec::ld::default(),     repr: "LD E, C",        },
    Instruction { code: 0x5a, oper: exec::ld::default(),     repr: "LD E, D",        },
    Instruction { code: 0x5b, oper: exec::ld::default(),     repr: "LD E, E",        },
    Instruction { code: 0x5c, oper: exec::ld::default(),     repr: "LD E, H",        },
    Instruction { code: 0x5d, oper: exec::ld::default(),     repr: "LD E, L",        },
    Instruction { code: 0x5e, oper: exec::ld::default(),     repr: "LD E, (HL)",     },
    Instruction { code: 0x5f, oper: exec::ld::default(),     repr: "LD E, A",        },
    Instruction { code: 0x60, oper: exec::ld::default(),     repr: "LD H, B",        },
    Instruction { code: 0x61, oper: exec::ld::default(),     repr: "LD H, C",        },
    Instruction { code: 0x62, oper: exec::ld::default(),     repr: "LD H, D",        },
    Instruction { code: 0x63, oper: exec::ld::default(),     repr: "LD H, E",        },
    Instruction { code: 0x64, oper: exec::ld::default(),     repr: "LD H, H",        },
    Instruction { code: 0x65, oper: exec::ld::default(),     repr: "LD H, L",        },
    Instruction { code: 0x66, oper: exec::ld::default(),     repr: "LD H, (HL)",     },
    Instruction { code: 0x67, oper: exec::ld::default(),     repr: "LD H, A",        },
    Instruction { code: 0x68, oper: exec::ld::default(),     repr: "LD L, B",        },
    Instruction { code: 0x69, oper: exec::ld::default(),     repr: "LD L, C",        },
    Instruction { code: 0x6a, oper: exec::ld::default(),     repr: "LD L, D",        },
    Instruction { code: 0x6b, oper: exec::ld::default(),     repr: "LD L, E",        },
    Instruction { code: 0x6c, oper: exec::ld::default(),     repr: "LD L, H",        },
    Instruction { code: 0x6d, oper: exec::ld::default(),     repr: "LD L, L",        },
    Instruction { code: 0x6e, oper: exec::ld::default(),     repr: "LD L, (HL)",     },
    Instruction { code: 0x6f, oper: exec::ld::default(),     repr: "LD L, A",        },
    Instruction { code: 0x70, oper: exec::ld::default(),     repr: "LD (HL), B",     },
    Instruction { code: 0x71, oper: exec::ld::default(),     repr: "LD (HL), C",     },
    Instruction { code: 0x72, oper: exec::ld::default(),     repr: "LD (HL), D",     },
    Instruction { code: 0x73, oper: exec::ld::default(),     repr: "LD (HL), E",     },
    Instruction { code: 0x74, oper: exec::ld::default(),     repr: "LD (HL), H",     },
    Instruction { code: 0x75, oper: exec::ld::default(),     repr: "LD (HL), L",     },
    Instruction { code: 0x76, oper: exec::halt::default(),   repr: "HALT",           },
    Instruction { code: 0x77, oper: exec::ld::default(),     repr: "LD (HL), A",     },
    Instruction { code: 0x78, oper: exec::ld::default(),     repr: "LD A, B",        },
    Instruction { code: 0x79, oper: exec::ld::default(),     repr: "LD A, C",        },
    Instruction { code: 0x7a, oper: exec::ld::default(),     repr: "LD A, D",        },
    Instruction { code: 0x7b, oper: exec::ld::default(),     repr: "LD A, E",        },
    Instruction { code: 0x7c, oper: exec::ld::default(),     repr: "LD A, H",        },
    Instruction { code: 0x7d, oper: exec::ld::default(),     repr: "LD A, L",        },
    Instruction { code: 0x7e, oper: exec::ld::default(),     repr: "LD A, (HL)",     },
    Instruction { code: 0x7f, oper: exec::ld::default(),     repr: "LD A, A",        },
    Instruction { code: 0x80, oper: exec::add::default(),    repr: "ADD A, B",       },
    Instruction { code: 0x81, oper: exec::add::default(),    repr: "ADD A, C",       },
    Instruction { code: 0x82, oper: exec::add::default(),    repr: "ADD A, D",       },
    Instruction { code: 0x83, oper: exec::add::default(),    repr: "ADD A, E",       },
    Instruction { code: 0x84, oper: exec::add::default(),    repr: "ADD A, H",       },
    Instruction { code: 0x85, oper: exec::add::default(),    repr: "ADD A, L",       },
    Instruction { code: 0x86, oper: exec::add::default(),    repr: "ADD A, (HL)",    },
    Instruction { code: 0x87, oper: exec::add::default(),    repr: "ADD A, A",       },
    Instruction { code: 0x88, oper: exec::adc::default(),    repr: "ADC A, B",       },
    Instruction { code: 0x89, oper: exec::adc::default(),    repr: "ADC A, C",       },
    Instruction { code: 0x8a, oper: exec::adc::default(),    repr: "ADC A, D",       },
    Instruction { code: 0x8b, oper: exec::adc::default(),    repr: "ADC A, E",       },
    Instruction { code: 0x8c, oper: exec::adc::default(),    repr: "ADC A, H",       },
    Instruction { code: 0x8d, oper: exec::adc::default(),    repr: "ADC A, L",       },
    Instruction { code: 0x8e, oper: exec::adc::default(),    repr: "ADC A, (HL)",    },
    Instruction { code: 0x8f, oper: exec::adc::default(),    repr: "ADC A, A",       },
    Instruction { code: 0x90, oper: exec::sub::default(),    repr: "SUB A, B",       },
    Instruction { code: 0x91, oper: exec::sub::default(),    repr: "SUB A, C",       },
    Instruction { code: 0x92, oper: exec::sub::default(),    repr: "SUB A, D",       },
    Instruction { code: 0x93, oper: exec::sub::default(),    repr: "SUB A, E",       },
    Instruction { code: 0x94, oper: exec::sub::default(),    repr: "SUB A, H",       },
    Instruction { code: 0x95, oper: exec::sub::default(),    repr: "SUB A, L",       },
    Instruction { code: 0x96, oper: exec::sub::default(),    repr: "SUB A, (HL)",    },
    Instruction { code: 0x97, oper: exec::sub::default(),    repr: "SUB A, A",       },
    Instruction { code: 0x98, oper: exec::sbc::default(),    repr: "SBC A, B",       },
    Instruction { code: 0x99, oper: exec::sbc::default(),    repr: "SBC A, C",       },
    Instruction { code: 0x9a, oper: exec::sbc::default(),    repr: "SBC A, D",       },
    Instruction { code: 0x9b, oper: exec::sbc::default(),    repr: "SBC A, E",       },
    Instruction { code: 0x9c, oper: exec::sbc::default(),    repr: "SBC A, H",       },
    Instruction { code: 0x9d, oper: exec::sbc::default(),    repr: "SBC A, L",       },
    Instruction { code: 0x9e, oper: exec::sbc::default(),    repr: "SBC A, (HL)",    },
    Instruction { code: 0x9f, oper: exec::sbc::default(),    repr: "SBC A, A",       },
    Instruction { code: 0xa0, oper: exec::and::default(),    repr: "AND A, B",       },
    Instruction { code: 0xa1, oper: exec::and::default(),    repr: "AND A, C",       },
    Instruction { code: 0xa2, oper: exec::and::default(),    repr: "AND A, D",       },
    Instruction { code: 0xa3, oper: exec::and::default(),    repr: "AND A, E",       },
    Instruction { code: 0xa4, oper: exec::and::default(),    repr: "AND A, H",       },
    Instruction { code: 0xa5, oper: exec::and::default(),    repr: "AND A, L",       },
    Instruction { code: 0xa6, oper: exec::and::default(),    repr: "AND A, (HL)",    },
    Instruction { code: 0xa7, oper: exec::and::default(),    repr: "AND A, A",       },
    Instruction { code: 0xa8, oper: exec::xor::default(),    repr: "XOR A, B",       },
    Instruction { code: 0xa9, oper: exec::xor::default(),    repr: "XOR A, C",       },
    Instruction { code: 0xaa, oper: exec::xor::default(),    repr: "XOR A, D",       },
    Instruction { code: 0xab, oper: exec::xor::default(),    repr: "XOR A, E",       },
    Instruction { code: 0xac, oper: exec::xor::default(),    repr: "XOR A, H",       },
    Instruction { code: 0xad, oper: exec::xor::default(),    repr: "XOR A, L",       },
    Instruction { code: 0xae, oper: exec::xor::default(),    repr: "XOR A, (HL)",    },
    Instruction { code: 0xaf, oper: exec::xor::default(),    repr: "XOR A, A",       },
    Instruction { code: 0xb0, oper: exec::or::default(),     repr: "OR A, B",        },
    Instruction { code: 0xb1, oper: exec::or::default(),     repr: "OR A, C",        },
    Instruction { code: 0xb2, oper: exec::or::default(),     repr: "OR A, D",        },
    Instruction { code: 0xb3, oper: exec::or::default(),     repr: "OR A, E",        },
    Instruction { code: 0xb4, oper: exec::or::default(),     repr: "OR A, H",        },
    Instruction { code: 0xb5, oper: exec::or::default(),     repr: "OR A, L",        },
    Instruction { code: 0xb6, oper: exec::or::default(),     repr: "OR A, (HL)",     },
    Instruction { code: 0xb7, oper: exec::or::default(),     repr: "OR A, A",        },
    Instruction { code: 0xb8, oper: exec::cp::default(),     repr: "CP A, B",        },
    Instruction { code: 0xb9, oper: exec::cp::default(),     repr: "CP A, C",        },
    Instruction { code: 0xba, oper: exec::cp::default(),     repr: "CP A, D",        },
    Instruction { code: 0xbb, oper: exec::cp::default(),     repr: "CP A, E",        },
    Instruction { code: 0xbc, oper: exec::cp::default(),     repr: "CP A, H",        },
    Instruction { code: 0xbd, oper: exec::cp::default(),     repr: "CP A, L",        },
    Instruction { code: 0xbe, oper: exec::cp::default(),     repr: "CP A, (HL)",     },
    Instruction { code: 0xbf, oper: exec::cp::default(),     repr: "CP A, A",        },
    Instruction { code: 0xc0, oper: exec::ret::default(),    repr: "RET NZ",         },
    Instruction { code: 0xc1, oper: exec::pop::default(),    repr: "POP BC",         },
    Instruction { code: 0xc2, oper: exec::jp::default(),     repr: "JP NZ, a16",     },
    Instruction { code: 0xc3, oper: exec::jp::default(),     repr: "JP a16",         },
    Instruction { code: 0xc4, oper: exec::call::default(),   repr: "CALL NZ, a16",   },
    Instruction { code: 0xc5, oper: exec::push::default(),   repr: "PUSH BC",        },
    Instruction { code: 0xc6, oper: exec::add::default(),    repr: "ADD A, n8",      },
    Instruction { code: 0xc7, oper: exec::rst::default(),    repr: "RST 00H",        },
    Instruction { code: 0xc8, oper: exec::ret::default(),    repr: "RET Z",          },
    Instruction { code: 0xc9, oper: exec::ret::default(),    repr: "RET",            },
    Instruction { code: 0xca, oper: exec::jp::default(),     repr: "JP Z, a16",      },
    Instruction { code: 0xcb, oper: exec::prefix::default(), repr: "PREFIX",         },
    Instruction { code: 0xcc, oper: exec::call::default(),   repr: "CALL Z, a16",    },
    Instruction { code: 0xcd, oper: exec::call::default(),   repr: "CALL a16",       },
    Instruction { code: 0xce, oper: exec::adc::default(),    repr: "ADC A, n8",      },
    Instruction { code: 0xcf, oper: exec::rst::default(),    repr: "RST 08H",        },
    Instruction { code: 0xd0, oper: exec::ret::default(),    repr: "RET NC",         },
    Instruction { code: 0xd1, oper: exec::pop::default(),    repr: "POP DE",         },
    Instruction { code: 0xd2, oper: exec::jp::default(),     repr: "JP NC, a16",     },
    Instruction { code: 0xd3, oper: exec::unused::default(), repr: "UNUSED",         },
    Instruction { code: 0xd4, oper: exec::call::default(),   repr: "CALL NC, a16",   },
    Instruction { code: 0xd5, oper: exec::push::default(),   repr: "PUSH DE",        },
    Instruction { code: 0xd6, oper: exec::sub::default(),    repr: "SUB n8",         },
    Instruction { code: 0xd7, oper: exec::rst::default(),    repr: "RST 10H",        },
    Instruction { code: 0xd8, oper: exec::ret::default(),    repr: "RET C",          },
    Instruction { code: 0xd9, oper: exec::reti::default(),   repr: "RETI",           },
    Instruction { code: 0xda, oper: exec::jp::default(),     repr: "JP C, a16",      },
    Instruction { code: 0xdb, oper: exec::unused::default(), repr: "UNUSED",         },
    Instruction { code: 0xdc, oper: exec::call::default(),   repr: "CALL C, a16",    },
    Instruction { code: 0xdd, oper: exec::unused::default(), repr: "UNUSED",         },
    Instruction { code: 0xde, oper: exec::sbc::default(),    repr: "SBC A, n8",      },
    Instruction { code: 0xdf, oper: exec::rst::default(),    repr: "RST 18H",        },
    Instruction { code: 0xe0, oper: exec::ldh::default(),    repr: "LDH (a8), A",    },
    Instruction { code: 0xe1, oper: exec::pop::default(),    repr: "POP HL",         },
    Instruction { code: 0xe2, oper: exec::ldh::default(),    repr: "LD (C), A",      },
    Instruction { code: 0xe3, oper: exec::unused::default(), repr: "UNUSED",         },
    Instruction { code: 0xe4, oper: exec::unused::default(), repr: "UNUSED",         },
    Instruction { code: 0xe5, oper: exec::push::default(),   repr: "PUSH HL",        },
    Instruction { code: 0xe6, oper: exec::and::default(),    repr: "AND A, n8",      },
    Instruction { code: 0xe7, oper: exec::rst::default(),    repr: "RST 20H",        },
    Instruction { code: 0xe8, oper: exec::addw::default(),   repr: "ADD SP, e8",     },
    Instruction { code: 0xe9, oper: exec::jp::default(),     repr: "JP HL",          },
    Instruction { code: 0xea, oper: exec::ld::default(),     repr: "LD (a16), A",    },
    Instruction { code: 0xeb, oper: exec::unused::default(), repr: "UNUSED",         },
    Instruction { code: 0xec, oper: exec::unused::default(), repr: "UNUSED",         },
    Instruction { code: 0xed, oper: exec::unused::default(), repr: "UNUSED",         },
    Instruction { code: 0xee, oper: exec::xor::default(),    repr: "XOR A, n8",      },
    Instruction { code: 0xef, oper: exec::rst::default(),    repr: "RST 28H",        },
    Instruction { code: 0xf0, oper: exec::ldh::default(),    repr: "LDH A, (a8)",    },
    Instruction { code: 0xf1, oper: exec::pop::default(),    repr: "POP AF",         },
    Instruction { code: 0xf2, oper: exec::ldh::default(),    repr: "LD A, (C)",      },
    Instruction { code: 0xf3, oper: exec::di::default(),     repr: "DI",             },
    Instruction { code: 0xf4, oper: exec::unused::default(), repr: "UNUSED",         },
    Instruction { code: 0xf5, oper: exec::push::default(),   repr: "PUSH AF",        },
    Instruction { code: 0xf6, oper: exec::or::default(),     repr: "OR A, n8",       },
    Instruction { code: 0xf7, oper: exec::rst::default(),    repr: "RST 30H",        },
    Instruction { code: 0xf8, oper: exec::ldw::default(),    repr: "LD HL, SP + e8", },
    Instruction { code: 0xf9, oper: exec::ldw::default(),    repr: "LD SP, HL",      },
    Instruction { code: 0xfa, oper: exec::ld::default(),     repr: "LD A, (a16)",    },
    Instruction { code: 0xfb, oper: exec::ei::default(),     repr: "EI",             },
    Instruction { code: 0xfc, oper: exec::unused::default(), repr: "UNUSED",         },
    Instruction { code: 0xfd, oper: exec::unused::default(), repr: "UNUSED",         },
    Instruction { code: 0xfe, oper: exec::cp::default(),     repr: "CP A, n8",       },
    Instruction { code: 0xff, oper: exec::rst::default(),    repr: "RST 38H",        },
];

/// Prefix lookup table.
#[rustfmt::skip]
pub const PREFIX: [Instruction; 0x100] = [
    Instruction { code: 0x00, oper: exec::rlc::default(),  repr: "RLC B",       },
    Instruction { code: 0x01, oper: exec::rlc::default(),  repr: "RLC C",       },
    Instruction { code: 0x02, oper: exec::rlc::default(),  repr: "RLC D",       },
    Instruction { code: 0x03, oper: exec::rlc::default(),  repr: "RLC E",       },
    Instruction { code: 0x04, oper: exec::rlc::default(),  repr: "RLC H",       },
    Instruction { code: 0x05, oper: exec::rlc::default(),  repr: "RLC L",       },
    Instruction { code: 0x06, oper: exec::rlc::default(),  repr: "RLC (HL)",    },
    Instruction { code: 0x07, oper: exec::rlc::default(),  repr: "RLC A",       },
    Instruction { code: 0x08, oper: exec::rrc::default(),  repr: "RRC B",       },
    Instruction { code: 0x09, oper: exec::rrc::default(),  repr: "RRC C",       },
    Instruction { code: 0x0a, oper: exec::rrc::default(),  repr: "RRC D",       },
    Instruction { code: 0x0b, oper: exec::rrc::default(),  repr: "RRC E",       },
    Instruction { code: 0x0c, oper: exec::rrc::default(),  repr: "RRC H",       },
    Instruction { code: 0x0d, oper: exec::rrc::default(),  repr: "RRC L",       },
    Instruction { code: 0x0e, oper: exec::rrc::default(),  repr: "RRC (HL)",    },
    Instruction { code: 0x0f, oper: exec::rrc::default(),  repr: "RRC A",       },
    Instruction { code: 0x10, oper: exec::rl::default(),   repr: "RL B",        },
    Instruction { code: 0x11, oper: exec::rl::default(),   repr: "RL C",        },
    Instruction { code: 0x12, oper: exec::rl::default(),   repr: "RL D",        },
    Instruction { code: 0x13, oper: exec::rl::default(),   repr: "RL E",        },
    Instruction { code: 0x14, oper: exec::rl::default(),   repr: "RL H",        },
    Instruction { code: 0x15, oper: exec::rl::default(),   repr: "RL L",        },
    Instruction { code: 0x16, oper: exec::rl::default(),   repr: "RL (HL)",     },
    Instruction { code: 0x17, oper: exec::rl::default(),   repr: "RL A",        },
    Instruction { code: 0x18, oper: exec::rr::default(),   repr: "RR B",        },
    Instruction { code: 0x19, oper: exec::rr::default(),   repr: "RR C",        },
    Instruction { code: 0x1a, oper: exec::rr::default(),   repr: "RR D",        },
    Instruction { code: 0x1b, oper: exec::rr::default(),   repr: "RR E",        },
    Instruction { code: 0x1c, oper: exec::rr::default(),   repr: "RR H",        },
    Instruction { code: 0x1d, oper: exec::rr::default(),   repr: "RR L",        },
    Instruction { code: 0x1e, oper: exec::rr::default(),   repr: "RR (HL)",     },
    Instruction { code: 0x1f, oper: exec::rr::default(),   repr: "RR A",        },
    Instruction { code: 0x20, oper: exec::sla::default(),  repr: "SLA B",       },
    Instruction { code: 0x21, oper: exec::sla::default(),  repr: "SLA C",       },
    Instruction { code: 0x22, oper: exec::sla::default(),  repr: "SLA D",       },
    Instruction { code: 0x23, oper: exec::sla::default(),  repr: "SLA E",       },
    Instruction { code: 0x24, oper: exec::sla::default(),  repr: "SLA H",       },
    Instruction { code: 0x25, oper: exec::sla::default(),  repr: "SLA L",       },
    Instruction { code: 0x26, oper: exec::sla::default(),  repr: "SLA (HL)",    },
    Instruction { code: 0x27, oper: exec::sla::default(),  repr: "SLA A",       },
    Instruction { code: 0x28, oper: exec::sra::default(),  repr: "SRA B",       },
    Instruction { code: 0x29, oper: exec::sra::default(),  repr: "SRA C",       },
    Instruction { code: 0x2a, oper: exec::sra::default(),  repr: "SRA D",       },
    Instruction { code: 0x2b, oper: exec::sra::default(),  repr: "SRA E",       },
    Instruction { code: 0x2c, oper: exec::sra::default(),  repr: "SRA H",       },
    Instruction { code: 0x2d, oper: exec::sra::default(),  repr: "SRA L",       },
    Instruction { code: 0x2e, oper: exec::sra::default(),  repr: "SRA (HL)",    },
    Instruction { code: 0x2f, oper: exec::sra::default(),  repr: "SRA A",       },
    Instruction { code: 0x30, oper: exec::swap::default(), repr: "SWAP B",      },
    Instruction { code: 0x31, oper: exec::swap::default(), repr: "SWAP C",      },
    Instruction { code: 0x32, oper: exec::swap::default(), repr: "SWAP D",      },
    Instruction { code: 0x33, oper: exec::swap::default(), repr: "SWAP E",      },
    Instruction { code: 0x34, oper: exec::swap::default(), repr: "SWAP H",      },
    Instruction { code: 0x35, oper: exec::swap::default(), repr: "SWAP L",      },
    Instruction { code: 0x36, oper: exec::swap::default(), repr: "SWAP (HL)",   },
    Instruction { code: 0x37, oper: exec::swap::default(), repr: "SWAP A",      },
    Instruction { code: 0x38, oper: exec::srl::default(),  repr: "SRL B",       },
    Instruction { code: 0x39, oper: exec::srl::default(),  repr: "SRL C",       },
    Instruction { code: 0x3a, oper: exec::srl::default(),  repr: "SRL D",       },
    Instruction { code: 0x3b, oper: exec::srl::default(),  repr: "SRL E",       },
    Instruction { code: 0x3c, oper: exec::srl::default(),  repr: "SRL H",       },
    Instruction { code: 0x3d, oper: exec::srl::default(),  repr: "SRL L",       },
    Instruction { code: 0x3e, oper: exec::srl::default(),  repr: "SRL (HL)",    },
    Instruction { code: 0x3f, oper: exec::srl::default(),  repr: "SRL A",       },
    Instruction { code: 0x40, oper: exec::bit::default(),  repr: "BIT 0, B",    },
    Instruction { code: 0x41, oper: exec::bit::default(),  repr: "BIT 0, C",    },
    Instruction { code: 0x42, oper: exec::bit::default(),  repr: "BIT 0, D",    },
    Instruction { code: 0x43, oper: exec::bit::default(),  repr: "BIT 0, E",    },
    Instruction { code: 0x44, oper: exec::bit::default(),  repr: "BIT 0, H",    },
    Instruction { code: 0x45, oper: exec::bit::default(),  repr: "BIT 0, L",    },
    Instruction { code: 0x46, oper: exec::bit::default(),  repr: "BIT 0, (HL)", },
    Instruction { code: 0x47, oper: exec::bit::default(),  repr: "BIT 0, A",    },
    Instruction { code: 0x48, oper: exec::bit::default(),  repr: "BIT 1, B",    },
    Instruction { code: 0x49, oper: exec::bit::default(),  repr: "BIT 1, C",    },
    Instruction { code: 0x4a, oper: exec::bit::default(),  repr: "BIT 1, D",    },
    Instruction { code: 0x4b, oper: exec::bit::default(),  repr: "BIT 1, E",    },
    Instruction { code: 0x4c, oper: exec::bit::default(),  repr: "BIT 1, H",    },
    Instruction { code: 0x4d, oper: exec::bit::default(),  repr: "BIT 1, L",    },
    Instruction { code: 0x4e, oper: exec::bit::default(),  repr: "BIT 1, (HL)", },
    Instruction { code: 0x4f, oper: exec::bit::default(),  repr: "BIT 1, A",    },
    Instruction { code: 0x50, oper: exec::bit::default(),  repr: "BIT 2, B",    },
    Instruction { code: 0x51, oper: exec::bit::default(),  repr: "BIT 2, C",    },
    Instruction { code: 0x52, oper: exec::bit::default(),  repr: "BIT 2, D",    },
    Instruction { code: 0x53, oper: exec::bit::default(),  repr: "BIT 2, E",    },
    Instruction { code: 0x54, oper: exec::bit::default(),  repr: "BIT 2, H",    },
    Instruction { code: 0x55, oper: exec::bit::default(),  repr: "BIT 2, L",    },
    Instruction { code: 0x56, oper: exec::bit::default(),  repr: "BIT 2, (HL)", },
    Instruction { code: 0x57, oper: exec::bit::default(),  repr: "BIT 2, A",    },
    Instruction { code: 0x58, oper: exec::bit::default(),  repr: "BIT 3, B",    },
    Instruction { code: 0x59, oper: exec::bit::default(),  repr: "BIT 3, C",    },
    Instruction { code: 0x5a, oper: exec::bit::default(),  repr: "BIT 3, D",    },
    Instruction { code: 0x5b, oper: exec::bit::default(),  repr: "BIT 3, E",    },
    Instruction { code: 0x5c, oper: exec::bit::default(),  repr: "BIT 3, H",    },
    Instruction { code: 0x5d, oper: exec::bit::default(),  repr: "BIT 3, L",    },
    Instruction { code: 0x5e, oper: exec::bit::default(),  repr: "BIT 3, (HL)", },
    Instruction { code: 0x5f, oper: exec::bit::default(),  repr: "BIT 3, A",    },
    Instruction { code: 0x60, oper: exec::bit::default(),  repr: "BIT 4, B",    },
    Instruction { code: 0x61, oper: exec::bit::default(),  repr: "BIT 4, C",    },
    Instruction { code: 0x62, oper: exec::bit::default(),  repr: "BIT 4, D",    },
    Instruction { code: 0x63, oper: exec::bit::default(),  repr: "BIT 4, E",    },
    Instruction { code: 0x64, oper: exec::bit::default(),  repr: "BIT 4, H",    },
    Instruction { code: 0x65, oper: exec::bit::default(),  repr: "BIT 4, L",    },
    Instruction { code: 0x66, oper: exec::bit::default(),  repr: "BIT 4, (HL)", },
    Instruction { code: 0x67, oper: exec::bit::default(),  repr: "BIT 4, A",    },
    Instruction { code: 0x68, oper: exec::bit::default(),  repr: "BIT 5, B",    },
    Instruction { code: 0x69, oper: exec::bit::default(),  repr: "BIT 5, C",    },
    Instruction { code: 0x6a, oper: exec::bit::default(),  repr: "BIT 5, D",    },
    Instruction { code: 0x6b, oper: exec::bit::default(),  repr: "BIT 5, E",    },
    Instruction { code: 0x6c, oper: exec::bit::default(),  repr: "BIT 5, H",    },
    Instruction { code: 0x6d, oper: exec::bit::default(),  repr: "BIT 5, L",    },
    Instruction { code: 0x6e, oper: exec::bit::default(),  repr: "BIT 5, (HL)", },
    Instruction { code: 0x6f, oper: exec::bit::default(),  repr: "BIT 5, A",    },
    Instruction { code: 0x70, oper: exec::bit::default(),  repr: "BIT 6, B",    },
    Instruction { code: 0x71, oper: exec::bit::default(),  repr: "BIT 6, C",    },
    Instruction { code: 0x72, oper: exec::bit::default(),  repr: "BIT 6, D",    },
    Instruction { code: 0x73, oper: exec::bit::default(),  repr: "BIT 6, E",    },
    Instruction { code: 0x74, oper: exec::bit::default(),  repr: "BIT 6, H",    },
    Instruction { code: 0x75, oper: exec::bit::default(),  repr: "BIT 6, L",    },
    Instruction { code: 0x76, oper: exec::bit::default(),  repr: "BIT 6, (HL)", },
    Instruction { code: 0x77, oper: exec::bit::default(),  repr: "BIT 6, A",    },
    Instruction { code: 0x78, oper: exec::bit::default(),  repr: "BIT 7, B",    },
    Instruction { code: 0x79, oper: exec::bit::default(),  repr: "BIT 7, C",    },
    Instruction { code: 0x7a, oper: exec::bit::default(),  repr: "BIT 7, D",    },
    Instruction { code: 0x7b, oper: exec::bit::default(),  repr: "BIT 7, E",    },
    Instruction { code: 0x7c, oper: exec::bit::default(),  repr: "BIT 7, H",    },
    Instruction { code: 0x7d, oper: exec::bit::default(),  repr: "BIT 7, L",    },
    Instruction { code: 0x7e, oper: exec::bit::default(),  repr: "BIT 7, (HL)", },
    Instruction { code: 0x7f, oper: exec::bit::default(),  repr: "BIT 7, A",    },
    Instruction { code: 0x80, oper: exec::res::default(),  repr: "RES 0, B",    },
    Instruction { code: 0x81, oper: exec::res::default(),  repr: "RES 0, C",    },
    Instruction { code: 0x82, oper: exec::res::default(),  repr: "RES 0, D",    },
    Instruction { code: 0x83, oper: exec::res::default(),  repr: "RES 0, E",    },
    Instruction { code: 0x84, oper: exec::res::default(),  repr: "RES 0, H",    },
    Instruction { code: 0x85, oper: exec::res::default(),  repr: "RES 0, L",    },
    Instruction { code: 0x86, oper: exec::res::default(),  repr: "RES 0, (HL)", },
    Instruction { code: 0x87, oper: exec::res::default(),  repr: "RES 0, A",    },
    Instruction { code: 0x88, oper: exec::res::default(),  repr: "RES 1, B",    },
    Instruction { code: 0x89, oper: exec::res::default(),  repr: "RES 1, C",    },
    Instruction { code: 0x8a, oper: exec::res::default(),  repr: "RES 1, D",    },
    Instruction { code: 0x8b, oper: exec::res::default(),  repr: "RES 1, E",    },
    Instruction { code: 0x8c, oper: exec::res::default(),  repr: "RES 1, H",    },
    Instruction { code: 0x8d, oper: exec::res::default(),  repr: "RES 1, L",    },
    Instruction { code: 0x8e, oper: exec::res::default(),  repr: "RES 1, (HL)", },
    Instruction { code: 0x8f, oper: exec::res::default(),  repr: "RES 1, A",    },
    Instruction { code: 0x90, oper: exec::res::default(),  repr: "RES 2, B",    },
    Instruction { code: 0x91, oper: exec::res::default(),  repr: "RES 2, C",    },
    Instruction { code: 0x92, oper: exec::res::default(),  repr: "RES 2, D",    },
    Instruction { code: 0x93, oper: exec::res::default(),  repr: "RES 2, E",    },
    Instruction { code: 0x94, oper: exec::res::default(),  repr: "RES 2, H",    },
    Instruction { code: 0x95, oper: exec::res::default(),  repr: "RES 2, L",    },
    Instruction { code: 0x96, oper: exec::res::default(),  repr: "RES 2, (HL)", },
    Instruction { code: 0x97, oper: exec::res::default(),  repr: "RES 2, A",    },
    Instruction { code: 0x98, oper: exec::res::default(),  repr: "RES 3, B",    },
    Instruction { code: 0x99, oper: exec::res::default(),  repr: "RES 3, C",    },
    Instruction { code: 0x9a, oper: exec::res::default(),  repr: "RES 3, D",    },
    Instruction { code: 0x9b, oper: exec::res::default(),  repr: "RES 3, E",    },
    Instruction { code: 0x9c, oper: exec::res::default(),  repr: "RES 3, H",    },
    Instruction { code: 0x9d, oper: exec::res::default(),  repr: "RES 3, L",    },
    Instruction { code: 0x9e, oper: exec::res::default(),  repr: "RES 3, (HL)", },
    Instruction { code: 0x9f, oper: exec::res::default(),  repr: "RES 3, A",    },
    Instruction { code: 0xa0, oper: exec::res::default(),  repr: "RES 4, B",    },
    Instruction { code: 0xa1, oper: exec::res::default(),  repr: "RES 4, C",    },
    Instruction { code: 0xa2, oper: exec::res::default(),  repr: "RES 4, D",    },
    Instruction { code: 0xa3, oper: exec::res::default(),  repr: "RES 4, E",    },
    Instruction { code: 0xa4, oper: exec::res::default(),  repr: "RES 4, H",    },
    Instruction { code: 0xa5, oper: exec::res::default(),  repr: "RES 4, L",    },
    Instruction { code: 0xa6, oper: exec::res::default(),  repr: "RES 4, (HL)", },
    Instruction { code: 0xa7, oper: exec::res::default(),  repr: "RES 4, A",    },
    Instruction { code: 0xa8, oper: exec::res::default(),  repr: "RES 5, B",    },
    Instruction { code: 0xa9, oper: exec::res::default(),  repr: "RES 5, C",    },
    Instruction { code: 0xaa, oper: exec::res::default(),  repr: "RES 5, D",    },
    Instruction { code: 0xab, oper: exec::res::default(),  repr: "RES 5, E",    },
    Instruction { code: 0xac, oper: exec::res::default(),  repr: "RES 5, H",    },
    Instruction { code: 0xad, oper: exec::res::default(),  repr: "RES 5, L",    },
    Instruction { code: 0xae, oper: exec::res::default(),  repr: "RES 5, (HL)", },
    Instruction { code: 0xaf, oper: exec::res::default(),  repr: "RES 5, A",    },
    Instruction { code: 0xb0, oper: exec::res::default(),  repr: "RES 6, B",    },
    Instruction { code: 0xb1, oper: exec::res::default(),  repr: "RES 6, C",    },
    Instruction { code: 0xb2, oper: exec::res::default(),  repr: "RES 6, D",    },
    Instruction { code: 0xb3, oper: exec::res::default(),  repr: "RES 6, E",    },
    Instruction { code: 0xb4, oper: exec::res::default(),  repr: "RES 6, H",    },
    Instruction { code: 0xb5, oper: exec::res::default(),  repr: "RES 6, L",    },
    Instruction { code: 0xb6, oper: exec::res::default(),  repr: "RES 6, (HL)", },
    Instruction { code: 0xb7, oper: exec::res::default(),  repr: "RES 6, A",    },
    Instruction { code: 0xb8, oper: exec::res::default(),  repr: "RES 7, B",    },
    Instruction { code: 0xb9, oper: exec::res::default(),  repr: "RES 7, C",    },
    Instruction { code: 0xba, oper: exec::res::default(),  repr: "RES 7, D",    },
    Instruction { code: 0xbb, oper: exec::res::default(),  repr: "RES 7, E",    },
    Instruction { code: 0xbc, oper: exec::res::default(),  repr: "RES 7, H",    },
    Instruction { code: 0xbd, oper: exec::res::default(),  repr: "RES 7, L",    },
    Instruction { code: 0xbe, oper: exec::res::default(),  repr: "RES 7, (HL)", },
    Instruction { code: 0xbf, oper: exec::res::default(),  repr: "RES 7, A",    },
    Instruction { code: 0xc0, oper: exec::set::default(),  repr: "SET 0, B",    },
    Instruction { code: 0xc1, oper: exec::set::default(),  repr: "SET 0, C",    },
    Instruction { code: 0xc2, oper: exec::set::default(),  repr: "SET 0, D",    },
    Instruction { code: 0xc3, oper: exec::set::default(),  repr: "SET 0, E",    },
    Instruction { code: 0xc4, oper: exec::set::default(),  repr: "SET 0, H",    },
    Instruction { code: 0xc5, oper: exec::set::default(),  repr: "SET 0, L",    },
    Instruction { code: 0xc6, oper: exec::set::default(),  repr: "SET 0, (HL)", },
    Instruction { code: 0xc7, oper: exec::set::default(),  repr: "SET 0, A",    },
    Instruction { code: 0xc8, oper: exec::set::default(),  repr: "SET 1, B",    },
    Instruction { code: 0xc9, oper: exec::set::default(),  repr: "SET 1, C",    },
    Instruction { code: 0xca, oper: exec::set::default(),  repr: "SET 1, D",    },
    Instruction { code: 0xcb, oper: exec::set::default(),  repr: "SET 1, E",    },
    Instruction { code: 0xcc, oper: exec::set::default(),  repr: "SET 1, H",    },
    Instruction { code: 0xcd, oper: exec::set::default(),  repr: "SET 1, L",    },
    Instruction { code: 0xce, oper: exec::set::default(),  repr: "SET 1, (HL)", },
    Instruction { code: 0xcf, oper: exec::set::default(),  repr: "SET 1, A",    },
    Instruction { code: 0xd0, oper: exec::set::default(),  repr: "SET 2, B",    },
    Instruction { code: 0xd1, oper: exec::set::default(),  repr: "SET 2, C",    },
    Instruction { code: 0xd2, oper: exec::set::default(),  repr: "SET 2, D",    },
    Instruction { code: 0xd3, oper: exec::set::default(),  repr: "SET 2, E",    },
    Instruction { code: 0xd4, oper: exec::set::default(),  repr: "SET 2, H",    },
    Instruction { code: 0xd5, oper: exec::set::default(),  repr: "SET 2, L",    },
    Instruction { code: 0xd6, oper: exec::set::default(),  repr: "SET 2, (HL)", },
    Instruction { code: 0xd7, oper: exec::set::default(),  repr: "SET 2, A",    },
    Instruction { code: 0xd8, oper: exec::set::default(),  repr: "SET 3, B",    },
    Instruction { code: 0xd9, oper: exec::set::default(),  repr: "SET 3, C",    },
    Instruction { code: 0xda, oper: exec::set::default(),  repr: "SET 3, D",    },
    Instruction { code: 0xdb, oper: exec::set::default(),  repr: "SET 3, E",    },
    Instruction { code: 0xdc, oper: exec::set::default(),  repr: "SET 3, H",    },
    Instruction { code: 0xdd, oper: exec::set::default(),  repr: "SET 3, L",    },
    Instruction { code: 0xde, oper: exec::set::default(),  repr: "SET 3, (HL)", },
    Instruction { code: 0xdf, oper: exec::set::default(),  repr: "SET 3, A",    },
    Instruction { code: 0xe0, oper: exec::set::default(),  repr: "SET 4, B",    },
    Instruction { code: 0xe1, oper: exec::set::default(),  repr: "SET 4, C",    },
    Instruction { code: 0xe2, oper: exec::set::default(),  repr: "SET 4, D",    },
    Instruction { code: 0xe3, oper: exec::set::default(),  repr: "SET 4, E",    },
    Instruction { code: 0xe4, oper: exec::set::default(),  repr: "SET 4, H",    },
    Instruction { code: 0xe5, oper: exec::set::default(),  repr: "SET 4, L",    },
    Instruction { code: 0xe6, oper: exec::set::default(),  repr: "SET 4, (HL)", },
    Instruction { code: 0xe7, oper: exec::set::default(),  repr: "SET 4, A",    },
    Instruction { code: 0xe8, oper: exec::set::default(),  repr: "SET 5, B",    },
    Instruction { code: 0xe9, oper: exec::set::default(),  repr: "SET 5, C",    },
    Instruction { code: 0xea, oper: exec::set::default(),  repr: "SET 5, D",    },
    Instruction { code: 0xeb, oper: exec::set::default(),  repr: "SET 5, E",    },
    Instruction { code: 0xec, oper: exec::set::default(),  repr: "SET 5, H",    },
    Instruction { code: 0xed, oper: exec::set::default(),  repr: "SET 5, L",    },
    Instruction { code: 0xee, oper: exec::set::default(),  repr: "SET 5, (HL)", },
    Instruction { code: 0xef, oper: exec::set::default(),  repr: "SET 5, A",    },
    Instruction { code: 0xf0, oper: exec::set::default(),  repr: "SET 6, B",    },
    Instruction { code: 0xf1, oper: exec::set::default(),  repr: "SET 6, C",    },
    Instruction { code: 0xf2, oper: exec::set::default(),  repr: "SET 6, D",    },
    Instruction { code: 0xf3, oper: exec::set::default(),  repr: "SET 6, E",    },
    Instruction { code: 0xf4, oper: exec::set::default(),  repr: "SET 6, H",    },
    Instruction { code: 0xf5, oper: exec::set::default(),  repr: "SET 6, L",    },
    Instruction { code: 0xf6, oper: exec::set::default(),  repr: "SET 6, (HL)", },
    Instruction { code: 0xf7, oper: exec::set::default(),  repr: "SET 6, A",    },
    Instruction { code: 0xf8, oper: exec::set::default(),  repr: "SET 7, B",    },
    Instruction { code: 0xf9, oper: exec::set::default(),  repr: "SET 7, C",    },
    Instruction { code: 0xfa, oper: exec::set::default(),  repr: "SET 7, D",    },
    Instruction { code: 0xfb, oper: exec::set::default(),  repr: "SET 7, E",    },
    Instruction { code: 0xfc, oper: exec::set::default(),  repr: "SET 7, H",    },
    Instruction { code: 0xfd, oper: exec::set::default(),  repr: "SET 7, L",    },
    Instruction { code: 0xfe, oper: exec::set::default(),  repr: "SET 7, (HL)", },
    Instruction { code: 0xff, oper: exec::set::default(),  repr: "SET 7, A",    },
];
